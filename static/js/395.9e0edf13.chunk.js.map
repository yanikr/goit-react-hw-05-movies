{"version":3,"file":"static/js/395.9e0edf13.chunk.js","mappings":"2MAEaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4FCDTE,EAAiBF,EAAAA,GAAAA,GAAH,+LASdG,EAAaH,EAAAA,GAAAA,EAAH,0F,kBCNVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAACZ,EAAD,CAAWa,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA/C,WACE,gBACES,IAAG,0CAAqCL,GACxCM,IAAKL,EACLM,MAAM,QACNC,OAAO,WAET,SAACf,EAAD,UAAaQ,QARRF,EADC,KAejB,C,qJCtBYU,EAAkBnB,EAAAA,GAAAA,KAAH,kPAYfoB,EAAoBpB,EAAAA,GAAAA,OAAH,kbAkBjBqB,EAAmBrB,EAAAA,GAAAA,MAAH,sN,SCrBd,SAASsB,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOlB,EAAP,KAAeqB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAyBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAwC,OAApCF,EAAaG,IAAI,eAAyB,CAC5C,IAAMC,EAAWJ,EAAaG,IAAI,gBAElCE,EAAAA,EAAAA,IAAoBD,GACjBE,MAAK,SAAAC,GACe,IAAnBA,EAAQC,OAAeV,GAAU,OAAIS,IAAYE,QAAQC,IAAI,QAC9D,IACAC,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAMC,QAAtB,IACdhB,EAAeG,EAAaG,IAAI,eACjC,CACF,GAAE,CAACH,KAGF,iCACE,UAACT,EAAD,CAAiBuB,SAtBA,SAAAC,GACnBA,EAAEC,iBACF,IAAMZ,EAAWW,EAAEE,OAAOC,SAAStB,YAAYuB,MAAMC,cACrDnB,EAAgB,CAAEL,YAAaQ,IAC/BP,EAAe,GAChB,EAiBG,WACE,SAACL,EAAD,CAAmB6B,KAAK,SAAxB,UACE,wCAEF,SAAC5B,EAAD,CACE6B,SA9Ba,SAAAP,GACnBlB,EAAekB,EAAEE,OAAOE,MACzB,EA6BOE,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,KAAK,cACLN,MAAOvB,EACP8B,YAAY,qBAGfjD,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C","sources":["pages/home/Home.styled.js","components/moviesList/MovieList.styled.js","components/moviesList/MoviesList.jsx","pages/movies/Movies.styled.js","pages/movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const MovieLink = styled(NavLink)`\n  margin-top: 10px;\n  font-weight: 500;\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\nexport const MoviesListGrid = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 500px);\n  grid-gap: 20px 20px;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  color: brown;\n  text-decoration: none;\n`;\n","import { MovieLink } from '../../pages/home/Home.styled';\nimport { MoviesListGrid, MovieTitle } from './MovieList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesListGrid>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n              width=\"500px\"\n              height=\"710px\"\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </MovieLink>\n        </li>\n      ))}\n    </MoviesListGrid>\n  );\n};\n","import styled from 'styled-components';\nexport const SearchMovieForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 10px 15px;\n  overflow: hidden;\n`;\nexport const SearchMovieButton = styled.button`\n  display: inline-block;\n  /* width: 48px;\n  height: 38px; */\n  border-radius: 4px;\n  border: 0;\n  /* background-size: 40%; */\n  color: #fff;\n  padding: 16px 15px;\n  font-weight: 500;\n  background-color: orangered;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  margin-right: 10px;\n`;\nexport const SearchMovieInput = styled.input`\n  display: inline-block;\n  padding: 10px 15px;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  border-radius: 4px;\n  padding-left: 20px;\n  padding-right: 4px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchedMovies } from '../../components/Api';\nimport { MoviesList } from '../../components/moviesList/MoviesList';\nimport {\n  SearchMovieForm,\n  SearchMovieButton,\n  SearchMovieInput,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newQuery = e.target.elements.searchQuery.value.toLowerCase();\n    setSearchParams({ searchQuery: newQuery });\n    setSearchQuery('');\n  };\n\n  useEffect(() => {\n    if (searchParams.get('searchQuery') !== null) {\n      const newQuery = searchParams.get('searchQuery');\n\n      fetchSearchedMovies(newQuery)\n        .then(results => {\n          results.length !== 0 ? setMovies([...results]) : console.log('error');\n        })\n        .catch(error => console.log(error.message));\n      setSearchQuery(searchParams.get('searchQuery'));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchMovieForm onSubmit={handleSubmit}>\n        <SearchMovieButton type=\"submit\">\n          <span>Search</span>\n        </SearchMovieButton>\n        <SearchMovieInput\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"searchQuery\"\n          value={searchQuery}\n          placeholder=\"Search movies\"\n        />\n      </SearchMovieForm>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n"],"names":["MovieLink","styled","NavLink","MoviesListGrid","MovieTitle","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","width","height","SearchMovieForm","SearchMovieButton","SearchMovieInput","Movies","useState","searchQuery","setSearchQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","fetchSearchedMovies","then","results","length","console","log","catch","error","message","onSubmit","e","preventDefault","target","elements","value","toLowerCase","type","onChange","autoComplete","autoFocus","name","placeholder"],"sourceRoot":""}